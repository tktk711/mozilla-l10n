#!/bin/bash

push="yes"
#push=

source $(dirname $0)/ttk.inc.sh
stop_if_running
mk_lock_file

if [[ $# -lt 1 ]]; then
	echo "$(basename $0) <--since|[lang|changeid>"
	echo "We don't allow all commits as we might overwrite other peoples work"
	exit 1
fi

if [[ $1 == "--since" ]]; then
	stop_if_no_last_commit
	mk_new_commit_file
	langs=$(which_langs $(cat $last_commit_file))
	[[ $langs ]] && logger_file commit auto "$(cat $last_commit_file)>$(cat $new_commit_file)" "{ $langs }"
	auto="yes"
else
	langs=$(which_langs $*)
	[[ $langs ]] && logger_file commit manual "{ $* }" "{ $langs }"
fi

if [[ ! $langs ]]; then
	rm_lock_file
	exit
fi


for lang in $langs
do
	mozlang=$(get_language_upstream $lang)
	pootlelang=$(get_language_pootle $lang)
	ttk-get $lang
	# FIXME handle initialised languages
	(
		cd ${base_dir}/$pootlelang
		if [[ $PRODUCT_DIRS ]]; then
			for dir in $PRODUCT_DIRS $RETIRED_PRODUCT_DIRS
			do
				git add -A $dir
			done
		else
			git add -A .
		fi
		if [[ $auto ]]; then
			author=$(commit_author $pootlelang $(cat $last_commit_file))
			if [[ $author ]]; then
				git commit --author="$author" -m "[$pootlelang] pull from Pootle ($project)"
			else
				git commit -m "[$pootlelang] pull from Pootle ($project)"
			fi
		else
			git commit -m "[$pootlelang] pull from Pootle ($project)"
		fi
	)
	ttk-build --vc $lang
	(cd ${base_dir}; git checkout $pootlelang)
	if [[ ! -d ${base_dir}/build/${L10N_VER}/$mozlang/.hg ]]; then
		echo "** No mercurial repo, skipping **"
		continue
	fi
	(
		cd ${base_dir}/build/${L10N_VER}/$mozlang
		hg addremove $PRODUCT_DIRS $RETIRED_PRODUCT_DIRS
		hg revert -C $OTHER_EXCLUDED_DIRS
		echo "** Creating mercurial commit **"
		hg commit -m "[$mozlang] update from Pootle ($project)"
		if [[ $push ]]; then
			echo "** Pushing to mercurial **"
			for i in {1..10}
			do
				LOCAL_TIP=$(hg identify --id --rev tip)
				REMOTE_TIP=$(hg identify --id --rev default default)
				if [[ $LOCAL_TIP == $REMOTE_TIP ]]; then
					break
				fi
				echo "Local tip:  $LOCAL_TIP"
				echo "Remote tip:  $REMOTE_TIP"
				hg pull -b default default
				hg update
				hg rebase --dest $REMOTE_TIP --base $LOCAL_TIP
				hg push
				status=$?  # Get exit status for `hg push`.
				if [[ $status -eq 0 ]]; then
					break
				fi
				echo "Failed to push. Rebasing..."
			done
		fi
	)
done

if [[ $push ]]; then
	echo "** Pushing to git **"
	git push
fi
[[ $auto ]] && update_last_commit_file
rm_lock_file
